# This file is autogenerated by maturin v1.2.3
# To update, run
#
#    maturin generate-ci github
#
name: Build and publish wheels and sdist to PyPI

on:
  release:
    types: [created]
  workflow_dispatch:

permissions:
  contents: read

jobs:
  linux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target: [x86_64, x86, aarch64]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        env:
          # support for lionux aarch64 - see here: https://github.com/apache/opendal/issues/3673
          CFLAGS_aarch64_unknown_linux_gnu: "-D__ARM_ARCH=8"
        with:
          before-script-linux: |
            # Check for yum and use it if available, otherwise use apt-get
            if command -v yum &> /dev/null; then
              echo "Detected yum package manager"
              yum -y install openssl-devel perl-IPC-Cmd perl-core
            elif command -v apt-get &> /dev/null; then
              echo "Detected apt-get package manager"
              apt-get update
              echo "Installing libssl-dev pkg-config openssl musl-dev"
              apt-get install -y libssl-dev pkg-config openssl musl-dev perl
            else
              echo "No supported package manager found (yum or apt-get)"
              exit 1
            fi
          working-directory: ./bindings
          target: ${{ matrix.target }}
          args: --release --out dist --find-interpreter
          sccache: 'true'
          manylinux: auto
      - name: Upload wheels
        uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: ./bindings/dist

  windows:
    runs-on: windows-latest
    strategy:
      matrix:
        target: [x64, x86]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          architecture: ${{ matrix.target }}
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.target }}
          args: --release --out dist --find-interpreter
          sccache: 'true'
          working-directory: ./bindings
      - name: Upload wheels
        uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: ./bindings/dist

  macos:
    runs-on: macos-latest
    strategy:
      matrix:
        target: [x86_64, aarch64]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.target }}
          args: --release --out dist --find-interpreter
          sccache: 'true'
          working-directory: ./bindings
      - name: Upload wheels
        uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: ./bindings/dist

  sdist:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Build sdist
        uses: PyO3/maturin-action@v1
        with:
          command: sdist
          args: --out dist
          working-directory: ./bindings
      - name: Upload sdist
        uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: ./bindings/dist

  release:
    name: Release
    runs-on: ubuntu-latest
    environment: release
    permissions:
      id-token: write
    if: "startsWith(github.ref, 'refs/tags/')"
    needs: [linux, windows, macos, sdist]
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: wheels
          path: ./bindings/dist
      - name: List contents
        run: |
          echo "Contents of dist/"
          ls -l ./bindings/dist/
      - name: Publish to PyPI
        uses: PyO3/maturin-action@v1
        with:
          command: upload
          args: --non-interactive --skip-existing ./bindings/dist/*
