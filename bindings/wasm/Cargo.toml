[package]
name = "gtars-js"
version = "0.1.0"
authors = ["Nathan LeRoy <NLeRoy917@gmail.com>"]
edition = "2018"

[lib]
crate-type = ["cdylib", "rlib"]

[features]
default = ["console_error_panic_hook"]

[dependencies]
wasm-bindgen = "0.2.84"
gtars = { path = "../../gtars" }
serde = { version = "1.0", features = ["derive"] }
serde-wasm-bindgen = "0.4"
# wasm-specific dependencies
getrandom = { version = "0.2.16", features = ["js"] }


# The `console_error_panic_hook` crate provides better debugging of panics by
# logging them with `console.error`. This is great for development, but requires
# all the `std::fmt` and `std::panicking` infrastructure, so isn't great for
# code size when deploying.
console_error_panic_hook = { version = "0.1.7", optional = true }
serde_json = "1.0.143"
web-sys = { version = "0.3", features = [
    "Storage",
    "Window",
] }

#[target.'cfg(target_arch = "wasm32")'.dependencies]
#wasm32-unknown-unknown-openbsd-libc = "0.2"

[dev-dependencies]
wasm-bindgen-test = "0.3.34"

[profile.release]
# Tell `rustc` to optimize for small code size.
opt-level = "s"
